# ** EXAM OBJECTIVE: INSTALLATION AND CONFIGURATION **
# GOAL: Secure a cluster and an index using Elasticsearch Security
# REQUIRED SETUP: (i) a running Elasticsearch cluster with at least one node and a Kibana instance, (ii) no index named `hamlet`
# You can copy-paste the following instructions into your Kibana console and work directly from there

# Enable xPack security on the cluster
# Set the password of the `elastic` and `kibana` built-in users, by using the pattern "{{username}}-password" (e.g., "elastic-password")
# Login to Kibana using the `elastic` user credentials
# Create the index `hamlet` and add some documents by running the following _bulk command
PUT hamlet/_doc/_bulk
{"index":{"_index":"hamlet","_id":0}}
{"line_number":"1","speaker":"BERNARDO","text_entry":"Whos there?"}
{"index":{"_index":"hamlet","_id":1}}
{"line_number":"2","speaker":"FRANCISCO","text_entry":"Nay, answer me: stand, and unfold yourself."}
{"index":{"_index":"hamlet","_id":2}}
{"line_number":"3","speaker":"BERNARDO","text_entry":"Long live the king!"}
{"index":{"_index":"hamlet","_id":3}}
{"line_number":"4","speaker":"FRANCISCO","text_entry":"Bernardo?"}
{"index":{"_index":"hamlet","_id":4}}
{"line_number":"5","speaker":"BERNARDO","text_entry":"He."}
{"index":{"_index":"hamlet","_id":5}}
{"line_number":"6","speaker":"FRANCISCO","text_entry":"You come most carefully upon your hour."}
{"index":{"_index":"hamlet","_id":6}}
{"line_number":"7","speaker":"BERNARDO","text_entry":"Tis now struck twelve; get thee to bed, Francisco."}
{"index":{"_index":"hamlet","_id":7}}
{"line_number":"8","speaker":"FRANCISCO","text_entry":"For this relief much thanks: tis bitter cold,"}
{"index":{"_index":"hamlet","_id":8}}
{"line_number":"9","speaker":"FRANCISCO","text_entry":"And I am sick at heart."}
{"index":{"_index":"hamlet","_id":9}}
{"line_number":"10","speaker":"BERNARDO","text_entry":"Have you had quiet guard?"}
# Create the security role `francisco_role` in the native realm, so that the role (i) has "monitor" privileges on the cluster, (ii) has all privileges on the `hamlet` index
# Create the user `francisco` with password "francisco-password"
# Assign the role `francisco_role` to the `francisco` user
# Login using the `francisco` user credentials, and run some queries on `hamlet` to verify that the role privileges were correctly set
# Create the security role `bernardo_role` in the native realm, so that the role (i) has "monitor" privileges on the cluster, (ii) has read-only privileges on the `hamlet` index, (iii) can see only those documents having "BERNARDO" as a `speaker`, (iv) can see only the `text_entry` field
# Create the user `bernardo` with password "bernardo-password"
# Assign the role `bernardo_role` to the `bernardo` user
# Login using the `bernardo` user credentials, and run some queries on `hamlet` to verify that the role privileges were correctly set
# Change the password of the `bernardo` user to "poor-bernardo"

# LAB STEPS

Configuration in Node1, Node2 and Node3

xpack.security.enabled: true
xpack.security.transport.ssl.enabled: true
xpack.security.transport.ssl.verification_mode: certificate 
xpack.security.transport.ssl.keystore.path: certs/elastic-certificates.p12 
xpack.security.transport.ssl.truststore.path: certs/elastic-certificates.p12 

bin/elasticsearch-certutil ca
(password:elastic)
bin/elasticsearch-certutil cert --ca elastic-stack-ca.p12
(password:elasticsearch)

Copy file to all three nodes:
mkdir /etc/elasticsearch/certs
scp elastic-certificates.p12 node2:/etc/elasticsearch/certs/elastic-certificates.p12
chmod 660 /etc/elasticsearch/certs/elastic-certificates.p12

bin/elasticsearch-keystore add xpack.security.transport.ssl.keystore.secure_password
bin/elasticsearch-keystore add xpack.security.transport.ssl.truststore.secure_password
(password:elasticsearch)

Copy keystore file to all three nodes:
scp /etc/elasticsearch/elasticsearch.keystore node2:/etc/elasticsearch/elasticsearch.keystore

systemctl start elasticsearch

/usr/share/elasticsearch/bin/elasticsearch-setup-passwords interactive 
(password is "elastic" for elastic,apm_system,kibana,logstash_system,beats_system,remote_monitoring_user)

Kibana.yml:
elasticsearch.username: "elastic"
elasticsearch.password: "elastic"

systemctl start kibana

Check status:

[root@esnode02 elasticsearch]# curl -uelastic:elastic http://10.0.0.12:9201/_cat/health  
1584284599 15:03:19 eoc-01-cluster green 3 3 6 3 0 0 0 0 - 100.0%
[root@esnode02 elasticsearch]# curl -uelastic:elastic http://10.0.0.12:9201/_cat/nodes
10.0.0.13 10 92 2 0.08 0.03 0.08 mdi * node2
10.0.0.12 10 93 2 0.01 0.02 0.06 md  - node1
10.0.0.14 11 93 2 0.00 0.01 0.07 mdi - node3
[root@esnode02 elasticsearch]# curl -uelastic:elastic http://10.0.0.12:9201
{
  "name" : "node1",
  "cluster_name" : "eoc-01-cluster",
  "cluster_uuid" : "srSVldxgR-yln4CcgFHYEg",
  "version" : {
    "number" : "7.2.1",
    "build_flavor" : "default",
    "build_type" : "rpm",
    "build_hash" : "fe6cb20",
    "build_date" : "2019-07-24T17:58:29.979462Z",
    "build_snapshot" : false,
    "lucene_version" : "8.0.0",
    "minimum_wire_compatibility_version" : "6.8.0",
    "minimum_index_compatibility_version" : "6.0.0-beta1"
  },
  "tagline" : "You Know, for Search"
}
[root@esnode02 elasticsearch]# 



# Check index hamlet

dev_tools> HEAD hamlet
404 - Not Found


[root@esnode01 ~]# curl -u elastic:elastic http://10.0.0.12:9201/hamlet?pretty
{
  "error" : {
    "root_cause" : [
      {
        "type" : "index_not_found_exception",
        "reason" : "no such index [hamlet]",
        "index_uuid" : "_na_",
        "resource.type" : "index_or_alias",
        "resource.id" : "hamlet",
        "index" : "hamlet"
      }
    ],
    "type" : "index_not_found_exception",
    "reason" : "no such index [hamlet]",
    "index_uuid" : "_na_",
    "resource.type" : "index_or_alias",
    "resource.id" : "hamlet",
    "index" : "hamlet"
  },
  "status" : 404
}
[root@esnode01 ~]#


# Create index hamlet
PUT hamlet/_doc/_bulk
{"index":{"_index":"hamlet","_id":0}}
{"line_number":"1","speaker":"BERNARDO","text_entry":"Whos there?"}
{"index":{"_index":"hamlet","_id":1}}
{"line_number":"2","speaker":"FRANCISCO","text_entry":"Nay, answer me: stand, and unfold yourself."}
{"index":{"_index":"hamlet","_id":2}}
{"line_number":"3","speaker":"BERNARDO","text_entry":"Long live the king!"}
{"index":{"_index":"hamlet","_id":3}}
{"line_number":"4","speaker":"FRANCISCO","text_entry":"Bernardo?"}
{"index":{"_index":"hamlet","_id":4}}
{"line_number":"5","speaker":"BERNARDO","text_entry":"He."}
{"index":{"_index":"hamlet","_id":5}}
{"line_number":"6","speaker":"FRANCISCO","text_entry":"You come most carefully upon your hour."}
{"index":{"_index":"hamlet","_id":6}}
{"line_number":"7","speaker":"BERNARDO","text_entry":"Tis now struck twelve; get thee to bed, Francisco."}
{"index":{"_index":"hamlet","_id":7}}
{"line_number":"8","speaker":"FRANCISCO","text_entry":"For this relief much thanks: tis bitter cold,"}
{"index":{"_index":"hamlet","_id":8}}
{"line_number":"9","speaker":"FRANCISCO","text_entry":"And I am sick at heart."}
{"index":{"_index":"hamlet","_id":9}}
{"line_number":"10","speaker":"BERNARDO","text_entry":"Have you had quiet guard?"}

# check index again
dev_tools> HEAD hamlet
200 - OK


# create role francisco_role
POST /_security/role/francisco_role
{
  "cluster": ["monitor"],
  "indices": [
    {
      "names": [ "hamlet" ],
      "privileges": ["all"],
      
    }
  ]
}



# create user
POST /_security/user/francisco
{
  "password" : "francisco-password",
  "roles" : [ "francisco_role" ],
  "full_name" : "francisco",
  "email" : "francisco@example.com"
  }
}


[root@esnode01 ~]# curl -XGET -u francisco:francisco-password http://10.0.0.12:9201/hamlet/_doc/0?pretty
{
  "_index" : "hamlet",
  "_type" : "_doc",
  "_id" : "0",
  "_version" : 1,
  "_seq_no" : 0,
  "_primary_term" : 1,
  "found" : true,
  "_source" : {
    "line_number" : "1",
    "speaker" : "BERNARDO",
    "text_entry" : "Whos there?"
  }
}
[root@esnode01 ~]#


dev_tools> HEAD /hamlet/_doc/0
200 - OK

if you login from Kibana then you will get below error due to this role does not grant access to Kibana
{"statusCode":403,"error":"Forbidden","message":"Forbidden"}


# create role bernardo_role
POST /_security/role/bernardo_role
{
  "cluster": ["monitor"], 
  "indices": [
    {
      "names": [ "hamlet" ],
      "privileges": [ "read" ],
      "field_security" : {
        "grant" : [ "text_entry" ]
      },
      "query": "{\"match\": {\"speaker\": \"BERNARDO\"}}"
    }
  ]
}

you will get security_exception so please active your trial license then execute above command.


# create user
POST /_security/user/bernardo
{
  "password" : "bernardo-password",
  "roles" : [ "bernardo_role" ],
  "full_name" : "bernardo",
  "email" : "bernardo@example.com"
  }
}

# login and check the query result
[root@esnode01 ~]# curl -XGET -u francisco:francisco-password http://10.0.0.12:9201/hamlet/_doc/0?pretty
{
  "_index" : "hamlet",
  "_type" : "_doc",
  "_id" : "0",
  "_version" : 1,
  "_seq_no" : 0,
  "_primary_term" : 1,
  "found" : true,
  "_source" : {
    "line_number" : "1",
    "speaker" : "BERNARDO",
    "text_entry" : "Whos there?"
  }
}
[root@esnode01 ~]# curl -XGET -u francisco:francisco-password http://10.0.0.12:9201/hamlet/_doc/1?pretty
{
  "_index" : "hamlet",
  "_type" : "_doc",
  "_id" : "1",
  "_version" : 1,
  "_seq_no" : 1,
  "_primary_term" : 1,
  "found" : true,
  "_source" : {
    "line_number" : "2",
    "speaker" : "FRANCISCO",
    "text_entry" : "Nay, answer me: stand, and unfold yourself."
  }
}
[root@esnode01 ~]# curl -XGET -u bernardo:bernardo-password http://10.0.0.12:9201/hamlet/_doc/0?pretty  
{
  "_index" : "hamlet",
  "_type" : "_doc",
  "_id" : "0",
  "_version" : 1,
  "_seq_no" : 0,
  "_primary_term" : 1,
  "found" : true,
  "_source" : {
    "text_entry" : "Whos there?"
  }
}
[root@esnode01 ~]# curl -XGET -u bernardo:bernardo-password http://10.0.0.12:9201/hamlet/_doc/1?pretty
{
  "_index" : "hamlet",
  "_type" : "_doc",
  "_id" : "1",
  "found" : false
}
[root@esnode01 ~]# 

# change password
POST /_security/user/bernardo/_password
{
  "password" : "poor-bernardo"
}




References:
https://www.elastic.co/guide/en/elasticsearch/reference/7.2/configuring-security.html
https://www.elastic.co/guide/en/elasticsearch/reference/7.2/security-settings.html
https://www.elastic.co/guide/en/elasticsearch/reference/7.2/configuring-tls.html
https://www.elastic.co/guide/en/elasticsearch/reference/7.2/get-started-roles.html
https://www.elastic.co/guide/en/elasticsearch/reference/7.2/security-api-put-role.html
https://www.elastic.co/guide/en/elasticsearch/reference/7.2/document-level-security.html  
https://www.elastic.co/guide/en/elasticsearch/reference/7.2/field-and-document-access-control.html
https://www.elastic.co/guide/en/elasticsearch/reference/7.2/security-api-change-password.html
https://www.elastic.co/guide/en/elasticsearch/reference/7.2/defining-roles.html
